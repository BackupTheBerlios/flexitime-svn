/*
 * Created on 21 janv. 2005
 * by binou
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */
package fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.ListSelectionModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

import fr.umlv.ir3.flexitime.common.data.resources.IDevice;
import fr.umlv.ir3.flexitime.common.data.resources.IGroup;
import fr.umlv.ir3.flexitime.common.data.resources.IResource;
import fr.umlv.ir3.flexitime.common.data.resources.IRoom;
import fr.umlv.ir3.flexitime.common.data.resources.ITeacher;
import fr.umlv.ir3.flexitime.common.gui.models.RessourcePlanningHebdoModelAdapter;
import fr.umlv.ir3.flexitime.common.gui.models.RessourcePlanningModel;
import fr.umlv.ir3.flexitime.common.tools.Gap;
import fr.umlv.ir3.flexitime.common.tools.Time;
import fr.umlv.ir3.flexitime.richClient.gui.panel.FlexiBar;
import fr.umlv.ir3.flexitime.server.MetierSimulator;


/**
 * DOCME Description
 * explication supplémentaire si nécessaire
 * in english please...
 * Que fait cette classe, qu'est-ce qu'elle 
 * représente, ...
 * 
 * @version Verion ou révision SVN
 * 
 * @author FlexiTeam - binou
 */
public class RessourcePlanning
{
    private JRessourcePlanning ressourcePlanning;
    private JRessourcePlanningHebdo ressourcePlanningHebdo;
    
    private IResource ressource;
    private Gap gap;
    private FlexiBar bar;
    private JPanel panel;
    
    
    //********************
    // Debugging
    //******************
    
    private JList teacherList;
    private JTree tsTree;
    
    
    

    
    
    /**
     * Creates a Panel 
     * @param initialGap 
     * 
     * @param group
     */
    public RessourcePlanning(Gap gap)
    {
        this.gap = gap;
        this.panel = new JPanel(new BorderLayout());
        
        //DEBUGGING
        JPanel test = new JPanel();
        FlowLayout bl = new FlowLayout();
        test.setLayout(bl);
        JButton b5 = new JButton("<<");
        b5.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                fullStepBack(); }    });
        JButton b3 = new JButton("<");
        b3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                stepBack(); }    });
        JButton b2 = new JButton("-");
        b2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                decrease(); }    });
        JButton b = new JButton("+");
        b.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){
                increase(); }  });
        JButton b4 = new JButton(">");
        b4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                stepOver(); }    });
        JButton b6 = new JButton(">>");
        b6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                fullStepOver(); }    });

        test.add(b5);
        test.add(b3);
        test.add(b2);
        test.add(b);
        test.add(b4);
        test.add(b6);
        panel.add(test,BorderLayout.NORTH);
        
        
    }
    
    public void fullStepBack()
    {
        ressourcePlanning.fullStepBack();
    }
    
    public void stepBack()
    {
        ressourcePlanning.stepBack();
    }
    
    public void decrease()
    {
        ressourcePlanning.decrease();
    }
    
    public void increase()
    {
        ressourcePlanning.increase();
    }
    
    public void stepOver()
    {
        ressourcePlanning.stepOver();
    }
    
    public void fullStepOver()
    {
        ressourcePlanning.fullStepOver();
    }
    
    
    /*public void changeGap(Gap gap)
    {
        this.gap = gap;
        this.panel.removeAll();
        this.panel.revalidate();
        createPlanning();
    }*/
    
    public JComponent getPanel(IResource ressource)
    {
        if(ressource == null)
            return null;
        this.ressource = ressource;
        createPlanning();
        
        return panel;
    }
    
    
    private void createPlanning()
    {
        if(this.ressource instanceof IGroup || this.ressource instanceof ITeacher)
        {
            if(Time.getGapWeek(this.gap.getStartDate(), this.gap.getEndDate())+1 > 1)
            {
                //ici il faudra lire les préférences pour voir le Gap initial
                ressourcePlanning = new JRessourcePlanning(new RessourcePlanningModel(this.ressource, this.gap));
                createRightFlexiBar();
                panel.add(new JScrollPane(createPanelForComponent(ressourcePlanning,"EDT")), BorderLayout.CENTER);
            }
            else
            {
                System.out.println("Affichage hebdo");
                ressourcePlanningHebdo = new JRessourcePlanningHebdo(new RessourcePlanningHebdoModelAdapter(this.ressource, this.gap));
                createRightFlexiBar();
                panel.add(new JScrollPane(createPanelForComponent(ressourcePlanningHebdo,"EDT")), BorderLayout.CENTER);
            }
        }
        else if(this.ressource instanceof IRoom || this.ressource instanceof IDevice)
        {
            
        }
    }
    

    
    private void createRightFlexiBar()
    {
        
//      Create a tree.
        DefaultMutableTreeNode rootNode3 = new DefaultMutableTreeNode("Structure d'enseignement");
        DefaultMutableTreeNode subGroup1 = new DefaultMutableTreeNode("General");
        DefaultMutableTreeNode subGroup2 = new DefaultMutableTreeNode("Rezo");
        rootNode3.add(subGroup1);
        rootNode3.add(subGroup2);
        DefaultMutableTreeNode sub1 = new DefaultMutableTreeNode("J2EE");
        DefaultMutableTreeNode sub2 = new DefaultMutableTreeNode("GL");
        DefaultMutableTreeNode sub3 = new DefaultMutableTreeNode("pwet pwet");
        subGroup1.add(sub1);
        subGroup1.add(sub2);
        subGroup1.add(sub3);
        DefaultMutableTreeNode sub4 = new DefaultMutableTreeNode("Exposé ReZo");
        DefaultMutableTreeNode sub5 = new DefaultMutableTreeNode("Modélisation des ReZo");
        subGroup2.add(sub4);
        subGroup2.add(sub5);
        DefaultTreeModel model3 = new DefaultTreeModel(rootNode3);
        tsTree = new JTree(model3);
        tsTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);
        
        DefaultListModel listModel = new DefaultListModel();
        listModel.addElement("Midonnet");
        listModel.addElement("Revuz");
        listModel.addElement("Cervelle ... aie");
        teacherList = new JList(listModel);
        teacherList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        
        bar = new FlexiBar();
        bar.add("Matieres", tsTree);
        bar.add("Profs", teacherList);
        
        panel.add(new JScrollPane(createPanelForComponent(bar,"Ajouter...")), BorderLayout.EAST);
    }
    

    
   

    
    private static JPanel createPanelForComponent(JComponent comp, String title)
    {
        JPanel panel = new JPanel(new BorderLayout());
        panel.add(comp, BorderLayout.CENTER);
        if (title != null)
        {
            panel.setBorder(BorderFactory.createTitledBorder(title));
        }
        return panel;
    }
    

}

