/*
 * Created on 29 janv. 2005
 * by binou
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */

package fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation;

import java.awt.Component;
import java.awt.Container;
import java.awt.GridBagConstraints;
import java.awt.LayoutManager;
import java.awt.Point;
import java.awt.event.MouseEvent;

import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.event.MouseInputAdapter;

/**
 * Component extended Panel to represent a entire Day with all cells
 * 
 * @version 0.5
 * @see fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JRessourcePlanning
 * @author FlexiTeam - binou
 */
public class DayPanel extends JPanel
{

    /**
     * Comment for <code>serialVersionUID</code>
     */
    private static final long serialVersionUID = 3257854285348616503L;
    private final int nbDays;
    private JBusy[] values;
    /**
     * DOCME
     * 
     * @param layout
     * @param nbDays 
     */
    public DayPanel(LayoutManager layout, int nbDays)
    {
        super(layout);
        this.nbDays = nbDays;
        this.values = new JBusy[this.nbDays];
        MouseEventForwarder forwarder = new MouseEventForwarder();
        addMouseListener(forwarder);
        addMouseMotionListener(forwarder);
    }
    
    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param comp
     * @param constraints 
     * 
     * @see java.awt.Container#add(java.awt.Component, java.lang.Object)
     * @author   FlexiTeam - binou
     */
    public void add(Component comp, Object constraints)
    {
        super.add(comp, constraints);
        //System.out.println(this.getParent());
        values[((GridBagConstraints)constraints).gridy] = (JBusy)comp;
    }
    

    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param lowerGap
     * @param upperGap 
     * 
     */
    public void removeInterval(int lowerGap, int upperGap)
    {
        for(int i = lowerGap; i <= upperGap; i++)
        {
            this.remove(values[i]);
            values[i] = null;
        }
    }
    
    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param gap
     * @return 
     * 
     * @see (si nécessaire)
     */
    public JBusy getBusyAt(int gap)
    {
        return values[gap];
    }

    

    final class MouseEventForwarder extends MouseInputAdapter
    {

        /**
         * @see javax.swing.event.MouseInputAdapter#mousePressed(java.awt.event.MouseEvent)
         * @author FlexiTeam - binou
         */
        public void mousePressed(MouseEvent e)
        {

            // forward
            Container parent = getParent();

            if (parent != null)
            {
                Point newPoint = SwingUtilities.convertPoint(DayPanel.this, e
                        .getPoint(), parent);
                e.translatePoint(newPoint.x - e.getX(), newPoint.y - e.getY());
                e.setSource(parent);

                parent.dispatchEvent(e);
            }
        }

        /**
         * @param e
         * @see javax.swing.event.MouseInputAdapter#mouseReleased(java.awt.event.MouseEvent)
         * @author FlexiTeam - binou
         */
        public void mouseReleased(MouseEvent e)
        {
            Container parent = getParent();

            if (parent != null)
            {
                Point newPoint = SwingUtilities.convertPoint(DayPanel.this, e
                        .getPoint(), parent);
                e.translatePoint(newPoint.x - e.getX(), newPoint.y - e.getY());
                e.setSource(parent);
                parent.dispatchEvent(e);
            }

        }

        /**
         * @see javax.swing.event.MouseInputAdapter#mouseDragged(java.awt.event.MouseEvent)
         * @author FlexiTeam - binou
         */
        public void mouseDragged(MouseEvent e)
        {
            // System.out.println("drag at : " + System.currentTimeMillis());
            Container parent = getParent();

            if (parent != null)
            {
                Point newPoint = SwingUtilities.convertPoint(DayPanel.this, e
                        .getPoint(), parent);
                e.translatePoint(newPoint.x - e.getX(), newPoint.y - e.getY());
                e.setSource(parent);
                parent.dispatchEvent(e);
            }
        }

    }



}
