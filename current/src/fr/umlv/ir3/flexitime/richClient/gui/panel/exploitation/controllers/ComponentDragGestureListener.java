/*
 * Created on 26 janv. 2005
 * by binou
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */
package fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.controllers;

import java.awt.AlphaComposite;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.dnd.DragGestureEvent;
import java.awt.dnd.DragGestureListener;
import java.awt.dnd.DragSource;
import java.awt.image.BufferedImage;

import javax.swing.JComponent;
import javax.swing.SwingUtilities;

import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JBusy;
import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JRessourcePlanning;
import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.TransferableLessonBloc;


/**
 * DOCME Description
 * explication supplémentaire si nécessaire
 * in english please...
 * Que fait cette classe, qu'est-ce qu'elle 
 * représente, ...
 * 
 * @version Verion ou révision SVN
 * 
 * @author FlexiTeam - binou
 */
public class ComponentDragGestureListener implements DragGestureListener
{

    private final ComponentDragSourceListener tdsl;
    private final JRessourcePlanning planning;
    private final DragSource dragSource;


    /**
     * DOCME
     * @param _planning 
     * @param _dragSource 
     * @param tdsl
     */
    public ComponentDragGestureListener(JRessourcePlanning _planning, DragSource _dragSource, ComponentDragSourceListener tdsl)
    {
        this.dragSource = _dragSource;
        this.tdsl = tdsl;
        this.planning = _planning;
    }

    /**
     * @see java.awt.dnd.DragGestureListener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)
     * @author FlexiTeam - binou
     */
    public void dragGestureRecognized(DragGestureEvent dge)
    {

        Point p_abs = dge.getDragOrigin();
        Point p_rel = planning.getLayout().location(p_abs.x, p_abs.y);

        // lit le label sur la grille d'origine
        Component comp = planning.getComponentAt(p_abs);

        // on test si c bien une case de cours et si c bien un cours ...
        // sinon pas de drag !
        if (comp != null
                && comp instanceof JBusy
                && comp != planning
                && planning.isALessonGap(p_rel)
                && planning.getModel().isALesson(planning.xToWeek(p_rel.x), planning.yToDay(p_rel.y),
                        planning.yToGapInTheDay(p_rel.y)))
        {
            // Generation de l'image
            planning.cursorPoint.setLocation(SwingUtilities.convertPoint(
                    planning, dge.getDragOrigin(), comp));
            planning.buffImage = new BufferedImage(comp.getWidth(),
                    comp.getHeight(),
                    java.awt.image.BufferedImage.TYPE_INT_ARGB_PRE);// buffered
                                                                    // image
                                                                    // reference
                                                                    // passing
                                                                    // the
                                                                    // comp's
                                                                    // ht
                                                                    // and
                                                                    // width
            Graphics2D graphics = planning.buffImage.createGraphics();// creating
                                                                // the
                                                                // graphics
                                                                // for
                                                                // buffered
                                                                // image
            graphics.setComposite(AlphaComposite.getInstance(
                    AlphaComposite.SRC_OVER, 0.5f)); // Sets the
                                                        // Composite for the
                                                        // Graphics2D
                                                        // context
            boolean opacity = ( (JComponent) comp ).isOpaque();
            if (opacity)
            {
                ( (JComponent) comp ).setOpaque(false);
            }
            comp.paint(graphics);
            if (opacity)
            {
                ( (JComponent) comp ).setOpaque(true);
            }
            graphics.dispose();

            dragSource.startDrag(dge, DragSource.DefaultMoveDrop,
                    planning.buffImage, planning.cursorPoint, new TransferableLessonBloc(  ( (JBusy) comp ).getBusy()),
                    tdsl);
            planning.revalidate();
            planning.repaint();
        }
    }
}

