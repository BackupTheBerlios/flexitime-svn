/*
 * Created on 21 janv. 2005
 * by binou
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */
package fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DragSource;
import java.awt.dnd.DropTarget;
import java.util.ArrayList;

import javax.swing.JComponent;
import javax.swing.JPanel;

import fr.umlv.ir3.flexitime.common.gui.event.PlanningDataEvent;
import fr.umlv.ir3.flexitime.common.gui.event.PlanningDataListener;
import fr.umlv.ir3.flexitime.common.gui.models.RessourcePlanningHebdoModelAdapter;
import fr.umlv.ir3.flexitime.common.gui.models.RessourcePlanningModel;
import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JRessourcePlanning.ComponentDragGestureListener;
import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JRessourcePlanning.ComponentDragSourceListener;
import fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation.JRessourcePlanning.ComponentDropTargetListener;
import fr.umlv.ir3.flexitime.richClient.gui.renderers.EDTCellHeaderRenderer;
import fr.umlv.ir3.flexitime.richClient.gui.renderers.EDTCellRenderer;


/**
 * DOCME Description
 * explication supplémentaire si nécessaire
 * in english please...
 * Que fait cette classe, qu'est-ce qu'elle 
 * représente, ...
 * 
 * @version Verion ou révision SVN
 * @see (si nécessaire)
 * 
 * @author FlexiTeam - binou
 */
public class JRessourcePlanningHebdo extends JPanel implements PlanningDataListener
{
    
    
    /**
     * Comment for <code>WEEK_WIDTH</code>
     */
    public static final int DATE_WIDTH = 120;
    /**
     * Comment for <code>DAY_COLUMN_WIDTH</code>
     */
    public static final int TIMEBLOC_WIDTH = 75;
    /**
     * Comment for <code>DAY_HEIGTH</code>
     */
    public static final int DATE_HEIGTH = 30;
    /**
     * Comment for <code>GAP_HEIGTH</code>
     */
    public static final int GAP_HEIGTH = 30;
    
    
    private GridBagLayout gbl;
    
    private RessourcePlanningHebdoModelAdapter model;
    private EDTCellRenderer cellRenderer;
    private EDTCellHeaderRenderer cellHeaderRenderer;
    
    
    
    /**
     * Creates a new JRessourcePlanningHebdo, using the specified model
     * 
     * @param model the model to reprensents the data
     */
    public JRessourcePlanningHebdo(RessourcePlanningHebdoModelAdapter model)
    {
        super();
        
        //this.gbl = new GridBagLayout();
        //setLayout(gbl);
        
        
        /*dragSource = new DragSource();
        ComponentDragSourceListener tdsl = new ComponentDragSourceListener();
        dragSource.createDefaultDragGestureRecognizer(this, DnDConstants.ACTION_COPY_OR_MOVE, new ComponentDragGestureListener(tdsl));
        ComponentDropTargetListener tdtl = new ComponentDropTargetListener();
        dropTarget = new DropTarget(this, DnDConstants.ACTION_MOVE, tdtl);
        dropTarget.getClass();*/
        
        this.model = model;
        this.cellRenderer = new EDTCellRenderer();
        this.cellHeaderRenderer = new EDTCellHeaderRenderer();
        
        this.model.addPlanningDataListener(this);
        
        //this.selectedItems = new ArrayList<JBusy>();
        
        this.init();

    }
    
    
    /** 
     * Initialyse the time table
     * Is only used at the creation
     * 
     * @author   FlexiTeam - binou
     */
    private void init()
    {
        this.gbl = new GridBagLayout();
        setLayout(this.gbl);
        revalidate();
        removeAll();
        this.createDayLign();
        this.createTimeBlocColumn();
        this.fillLesson();
        repaint();
    }
    
    
    /** 
     * Generate the week Header of the time table containing the number of each week
     * 
     * @author   FlexiTeam - binou
     */
    private void createDayLign()
    {
        for (int i = 0 ; i < model.getNbDays() ; i++)
            addDateHeader(i+1,0,i);  //+1 =+timeBlocColumn
    } 
    
    /** 
     * Generate the first Column of the planning
     * containing : <br>
     * - the name of each day
     * - all gap's header
     * - each date of each days on each weeks
     * Is only used at the creation
     * 
     * @author   FlexiTeam - binou
     */
    private void createTimeBlocColumn()
    {
        int length = 0;
        int prec = 0;
        for (int j = 0 ; j < model.getNbBloc() ; j++)
        {
            length = model.getBlocSize(j);
            addGapHeader(0, prec+1, j, length); // +1 = +dayLign
            prec += length;
        }
    }
    
    /** 
     * Generate the data in the planning :
     * - each Lessons
     * - each empty space (no lessons)
     * Is only used at the creation
     * 
     * @author   FlexiTeam - binou
     */
    private void fillLesson()
    {     
        for (int i = 0 ; i < model.getNbDays() ; i++)
            for (int j = 0 ; j < model.getDayGapSize() ; j++)
                addGap(i+1, j+1, i, j);
    }
    
    /** 
     * Add to the layout a gap header at the specified coordinate
     * Is only used at the creation
     * 
     * @param x the x coordinate
     * @param y the y coordinate
     * @param length
     * @param gapNumber the gap number of the header to add
     * 
     * @author   FlexiTeam - binou
     */
    private void addGapHeader(int x, int y, int blocNumber, int length)
    {
        JComponent comp = cellHeaderRenderer.getEDTCellHeaderRendererComponent(this,model.getGapHeaderAt(blocNumber),EDTCellHeaderRenderer.GAP_HEADER);
        
        GridBagConstraints c = new GridBagConstraints();
        c.gridx = x;
        c.gridy = y;
        c.gridheight = length;
        c.fill = GridBagConstraints.VERTICAL;
        add(comp, c);
    }
    
    /** 
     * Add to the layout a date header at the specified coordinate
     * Is only used at the creation
     * 
     * @param x the x coordinate
     * @param y the y coordinate
     * @param weekNumber the week number of the date to add
     * @param dayNumber the day number of the header to add
     * 
     * @author   FlexiTeam - binou
     */
    private void addDateHeader(int x, int y, int dayNumber)
    {
        JComponent comp = cellHeaderRenderer.getEDTCellHeaderRendererComponent(this,model.getDateHeaderAt(dayNumber),EDTCellHeaderRenderer.DATE_HEADER);

        GridBagConstraints c = new GridBagConstraints();
        c.gridx = x;
        c.gridy = y;
        add(comp, c);
    }
    
    
    
    /** 
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param dayNumber
     * @param gapNumber 
     * 
     * @author   FlexiTeam - binou
     */
    private void addGap(int x, int y, int dayNumber, int gapNumber)
    {

        JComponent comp = cellRenderer.getEDTCellRendererComponent(this,model.getElementAt(dayNumber,gapNumber), 0, dayNumber,gapNumber);
        if(comp != null)
        {
            GridBagConstraints c = new GridBagConstraints();
            c.gridx = x;
            c.gridy = y;
            if(comp instanceof JBusy)
            {
                c.gridheight = ((JBusy)comp).getNbGaps();
                //System.out.println("placement sur " + ((JBusy)comp).getNbGaps());
                c.fill = GridBagConstraints.VERTICAL;
            }
            add(comp, c);
        }
    }
    
    
    
    
    
    
    
    
    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param e 
     * 
     * @see fr.umlv.ir3.flexitime.common.gui.event.PlanningDataListener#intervalAdded(fr.umlv.ir3.flexitime.common.gui.event.PlanningDataEvent)
     * @author   FlexiTeam - binou
     */
    public void intervalAdded(PlanningDataEvent e)
    {
        // TODO Auto-generated method stub
        
    }
    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param e 
     * 
     * @see fr.umlv.ir3.flexitime.common.gui.event.PlanningDataListener#intervalRemoved(fr.umlv.ir3.flexitime.common.gui.event.PlanningDataEvent)
     * @author   FlexiTeam - binou
     */
    public void intervalRemoved(PlanningDataEvent e)
    {
        // TODO Auto-generated method stub
        
    }
    /** 
     * DOCME Description
     * Quel service est rendu par cette méthode
     * <code>exemple d'appel de la methode</code>
     *
     * @param e 
     * 
     * @see fr.umlv.ir3.flexitime.common.gui.event.PlanningDataListener#contentsChanged(fr.umlv.ir3.flexitime.common.gui.event.PlanningDataEvent)
     * @author   FlexiTeam - binou
     */
    public void contentsChanged(PlanningDataEvent e)
    {
        // TODO Auto-generated method stub
        
    }

}

