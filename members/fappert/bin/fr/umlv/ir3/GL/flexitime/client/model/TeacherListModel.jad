// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 16/12/2004 11:01:04
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   TeacherListModel.java

package fr.umlv.ir3.GL.flexitime.client.model;

import fr.umlv.ir3.GL.flexitime.client.event.MetierEvent;
import fr.umlv.ir3.GL.flexitime.client.listener.TeacherListener;
import fr.umlv.ir3.GL.flexitime.common.ressource.Teacher;
import fr.umlv.ir3.GL.flexitime.server.core.ITeacherCore;
import java.io.PrintStream;
import java.net.MalformedURLException;
import java.rmi.*;
import java.util.*;
import javax.swing.AbstractListModel;

public class TeacherListModel extends AbstractListModel
    implements TeacherListener
{

    public TeacherListModel()
    {
        try
        {
            metier = (ITeacherCore)Naming.lookup("rmi://127.0.0.1/TeacherCore");
            list = new ArrayList(metier.getTeachers());
            metier.addMetierListener(this);
        }
        catch(MalformedURLException e)
        {
            e.printStackTrace();
        }
        catch(RemoteException e)
        {
            e.printStackTrace();
        }
        catch(NotBoundException e)
        {
            e.printStackTrace();
        }
    }

    public int getSize()
    {
        return list.size();
    }

    public Object getElementAt(int i)
    {
        return ((Teacher)list.get(i)).getFirstName() + " " + ((Teacher)list.get(i)).getSurName();
    }

    public void add(String text1, String text2, String text3)
    {
        Teacher t;
        try
        {
            t = metier.createTeacher(text1, text2, text3);
        }
        catch(RemoteException e)
        {
            e.printStackTrace();
        }
    }

    public void remove(int i)
    {
        try
        {
            metier.deleteTeacher((Teacher)list.get(i));
        }
        catch(RemoteException e)
        {
            e.printStackTrace();
        }
    }

    public void teacherChanged(MetierEvent event)
    {
        if(!(event.getObject() instanceof Teacher))
            return;
        switch(event.getType())
        {
        default:
            break;

        case 1: // '\001'
        {
            System.out.println("Notification d'ajout !");
            System.out.println(metier.toString());
            Teacher t = (Teacher)event.getObject();
            list.add(t);
            fireIntervalAdded(this, list.size() - 1, list.size() - 1);
            break;
        }

        case 2: // '\002'
        {
            System.out.println("Notification de suppression !");
            System.out.println(metier.toString());
            Teacher t = (Teacher)event.getObject();
            System.out.println("teacher : " + t.toString());
            int i = 0;
            Iterator iter = list.iterator();
            for(Teacher element = (Teacher)iter.next(); element.compareTo(t) != 0 && iter.hasNext();)
            {
                element = (Teacher)iter.next();
                System.out.print("[" + element.compareTo(t) + "]");
                i++;
            }

            System.out.println("\n(" + i + ")");
            fireIntervalRemoved(t, i, i);
            list.remove(i);
            break;
        }
        }
    }

    private ITeacherCore metier;
    private List list;
}