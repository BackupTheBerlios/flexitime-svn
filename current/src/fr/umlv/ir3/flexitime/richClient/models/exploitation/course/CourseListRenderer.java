/*
 * Created on 1 févr. 2005
 * by Prâsad
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */

package fr.umlv.ir3.flexitime.richClient.models.exploitation.course;

import java.awt.Component;

import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;

import org.jgroups.blocks.ICounter;

import fr.umlv.ir3.flexitime.common.data.teachingStructure.ICourse;

/**
 * DOCME Description explication supplémentaire si nécessaire in english
 * please... Que fait cette classe, qu'est-ce qu'elle représente, ...
 * 
 * @version Verion ou révision SVN
 * @see (si nécessaire)
 */
public class CourseListRenderer extends DefaultListCellRenderer
{

    public Component getListCellRendererComponent(JList list, Object value,
            int index, boolean isSelected, boolean cellHasFocus)
    {

        JLabel c = (JLabel) super.getListCellRendererComponent(list, value,
                index, isSelected, cellHasFocus);

        CourseAdapter ca = (CourseAdapter) value;
        String libelleCours;
        String nomProf;
        String nomMatiere = ca.getCourse().getParentSubject().getName();
        if (ca.getTeacher() == null)
            nomProf = "(Pas de professeur)";
        else
            nomProf = ca.getTeacher().getName();
        
        switch (ca.getCourse().getType())
        {
            case ICourse.CM:
                libelleCours = nomMatiere + " :: Cours :: " + nomProf;
                break;
            case ICourse.TD:
                libelleCours = nomMatiere + " :: TD :: " + nomProf;
                break;
            case ICourse.TP:
                libelleCours = nomMatiere + " :: TP :: " + nomProf;
                break;
            default:
                libelleCours = nomMatiere;
        }
        c.setText(libelleCours);
        return c;
    }
}
