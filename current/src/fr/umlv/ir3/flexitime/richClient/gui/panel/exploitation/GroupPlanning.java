/*
 * Created on 21 janv. 2005
 * by binou
 * Copyright: GPL - UMLV(FR) - 2004/2005
 */
package fr.umlv.ir3.flexitime.richClient.gui.panel.exploitation;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.ListSelectionModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

import fr.umlv.ir3.flexitime.common.gui.models.RessourcePlanningModel;
import fr.umlv.ir3.flexitime.richClient.gui.panel.FlexiBar;
import fr.umlv.ir3.flexitime.server.MetierSimulator;


/**
 * DOCME Description
 * explication supplémentaire si nécessaire
 * in english please...
 * Que fait cette classe, qu'est-ce qu'elle 
 * représente, ...
 * 
 * @version Verion ou révision SVN
 * 
 * @author FlexiTeam - binou
 */
public class GroupPlanning
{
    
    
    
    private JTree trackTree;
    private JTree roomTree;
    //private JTree deviceTree;
    //private JList teacherList;
    
    private JList teacherList;
    private JTree tsTree;
    
    private JRessourcePlanning groupPlanning;
    
    private FlexiBar fb1;
    private FlexiBar fb2;
    private JPanel panel;
    
    
    public GroupPlanning()
    {
        this.panel = new JPanel(new BorderLayout());
          
        createLeftFlexiBar();
        //createRightFlexiBar();
        createPlanning();
        
        JPanel test = new JPanel();
        BoxLayout bl = new BoxLayout(test,BoxLayout.Y_AXIS);
        test.setLayout(bl);
        JButton b = new JButton("+");
        b.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){
                groupPlanning.increase(); }  });
        JButton b2 = new JButton("-");
        b2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                groupPlanning.decrease(); }    });
        JButton b3 = new JButton("<");
        b3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                groupPlanning.stepBack(); }    });
        JButton b4 = new JButton(">");
        b4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                groupPlanning.stepOver(); }    });
        JButton b5 = new JButton("<<");
        b5.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                groupPlanning.fullStepBack(); }    });
        JButton b6 = new JButton(">>");
        b6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){ 
                groupPlanning.fullStepOver(); }    });
        test.add(b);
        test.add(b2);
        test.add(b3);
        test.add(b4);
        test.add(b5);
        test.add(b6);
        
        
        panel.add(test,BorderLayout.EAST);
        
        
    }
    
    public void createLeftFlexiBar()
    {
//      Create a tree.
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode("Bâtiments");
        DefaultMutableTreeNode sharon = new DefaultMutableTreeNode("Copernic");
        rootNode.add(sharon);
        DefaultMutableTreeNode maya = new DefaultMutableTreeNode("Rez de chaussée");
        sharon.add(maya);
        sharon.add(new DefaultMutableTreeNode("1er étage"));
        DefaultMutableTreeNode anya = new DefaultMutableTreeNode("2ème étage");
        sharon.add(anya);
        maya.add(new DefaultMutableTreeNode("auditorium"));
        anya.add(new DefaultMutableTreeNode("2027"));
        DefaultTreeModel model = new DefaultTreeModel(rootNode);
        roomTree = new JTree(model);
        roomTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);
        
//      Create a tree.
        DefaultMutableTreeNode rootNode2 = new DefaultMutableTreeNode("Filieres");
        DefaultMutableTreeNode track1 = new DefaultMutableTreeNode("IR");
        DefaultMutableTreeNode track2 = new DefaultMutableTreeNode("MFPI");
        rootNode2.add(track1);
        rootNode2.add(track2);
        DefaultMutableTreeNode class1 = new DefaultMutableTreeNode("1ere année");
        DefaultMutableTreeNode class2 = new DefaultMutableTreeNode("2eme année");
        DefaultMutableTreeNode class3 = new DefaultMutableTreeNode("3eme année");
        track1.add(class1);
        track1.add(class2);
        track1.add(class3);
        DefaultMutableTreeNode group1 = new DefaultMutableTreeNode("Groupe 1");
        DefaultMutableTreeNode group2 = new DefaultMutableTreeNode("Groupe 2");
        class1.add(group1);
        class1.add(group2);
        class2.add(group1);
        class2.add(group2);
        class3.add(group1);
        class3.add(group2);
        DefaultTreeModel model2 = new DefaultTreeModel(rootNode2);
        trackTree = new JTree(model2);
        trackTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);
        
        fb1 = new FlexiBar();
        fb1.add("Filières", trackTree);
        fb1.add("Salles", roomTree);
        
        panel.add(new JScrollPane(createPanelForComponent(fb1,"Visualiser...")), BorderLayout.WEST);
    }
    
    public void createRightFlexiBar()
    {
        
//      Create a tree.
        DefaultMutableTreeNode rootNode3 = new DefaultMutableTreeNode("Structure d'enseignement");
        DefaultMutableTreeNode subGroup1 = new DefaultMutableTreeNode("General");
        DefaultMutableTreeNode subGroup2 = new DefaultMutableTreeNode("Rezo");
        rootNode3.add(subGroup1);
        rootNode3.add(subGroup2);
        DefaultMutableTreeNode sub1 = new DefaultMutableTreeNode("J2EE");
        DefaultMutableTreeNode sub2 = new DefaultMutableTreeNode("GL");
        DefaultMutableTreeNode sub3 = new DefaultMutableTreeNode("pwet pwet");
        subGroup1.add(sub1);
        subGroup1.add(sub2);
        subGroup1.add(sub3);
        DefaultMutableTreeNode sub4 = new DefaultMutableTreeNode("Exposé ReZo");
        DefaultMutableTreeNode sub5 = new DefaultMutableTreeNode("Modélisation des ReZo");
        subGroup2.add(sub4);
        subGroup2.add(sub5);
        DefaultTreeModel model3 = new DefaultTreeModel(rootNode3);
        tsTree = new JTree(model3);
        tsTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);
        
        DefaultListModel listModel = new DefaultListModel();
        listModel.addElement("Midonnet");
        listModel.addElement("Revuz");
        listModel.addElement("Cervelle ... aie");
        teacherList = new JList(listModel);
        teacherList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        
        fb2 = new FlexiBar();
        fb2.add("Matieres", tsTree);
        fb2.add("Profs", teacherList);
        
        panel.add(new JScrollPane(createPanelForComponent(fb2,"Ajouter...")), BorderLayout.EAST);
    }
    
    public void createPlanning()
    {
        groupPlanning = new JRessourcePlanning(new RessourcePlanningModel(MetierSimulator.getGroup2IR3()));
        
        panel.add(new JScrollPane(createPanelForComponent(groupPlanning,"EDT")), BorderLayout.CENTER);
        
    }
    
   

    
    public static JPanel createPanelForComponent(JComponent comp, String title)
    {
        JPanel panel = new JPanel(new BorderLayout());
        panel.add(comp, BorderLayout.CENTER);
        if (title != null)
        {
            panel.setBorder(BorderFactory.createTitledBorder(title));
        }
        return panel;
    }
    
    public JComponent getPanel()
    {
        return panel;
    }
    
    
    
    /**
     * Create the GUI and show it. For thread safety, this method should be
     * invoked from the event-dispatching thread.
     */
    private static void createAndShowGUI()
    {
        //Make sure we have nice window decorations.
        JFrame.setDefaultLookAndFeelDecorated(true);

        //Create and set up the window.
        JFrame frame = new JFrame("GroupPlanningDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //frame.setBounds(0,0,800,800);
        frame.setPreferredSize(new Dimension(800,600));
        //Set up the content pane.
        JButton b3 = new JButton("b3");
        JButton b4 = new JButton("b4");
        GroupPlanning group = new GroupPlanning();
        frame.getContentPane().add(createPanelForComponent(b3,"Toolbar"), BorderLayout.NORTH);
        frame.getContentPane().add(createPanelForComponent(b4,"StatusBar"), BorderLayout.SOUTH);
        frame.getContentPane().add(group.getPanel(), BorderLayout.CENTER);
         
        
        //);

        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }

    public static void main(String[] args)
    {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {

            public void run()
            {
                createAndShowGUI();
            }
        }); 
    }

}

